{"ast":null,"code":"import axios from 'axios';\nimport md5 from 'md5';\nclass Api {\n  constructor(apiUrl, authToken) {\n    this.apiUrl = apiUrl;\n    this.authToken = authToken;\n  }\n  async getIds(offset = 0, limit = 50) {\n    try {\n      const response = await axios.post(this.apiUrl, {\n        action: 'get_ids',\n        params: {\n          offset,\n          limit\n        }\n      }, {\n        headers: {\n          'X-Auth': this.generateAuthToken()\n        }\n      });\n      return response.data.result;\n    } catch (error) {\n      console.error('Error fetching IDs:', error);\n      throw error;\n    }\n  }\n  async getItems(ids) {\n    try {\n      const response = await axios.post(this.apiUrl, {\n        action: 'get_items',\n        params: {\n          ids\n        }\n      }, {\n        headers: {\n          'X-Auth': this.generateAuthToken()\n        }\n      });\n      return response.data.result;\n    } catch (error) {\n      console.error('Error fetching items:', error);\n      throw error;\n    }\n  }\n  async filter(params) {\n    try {\n      const response = await axios.post(this.apiUrl, {\n        action: 'filter',\n        params\n      }, {\n        headers: {\n          'X-Auth': this.generateAuthToken()\n        }\n      });\n      return response.data.result;\n    } catch (error) {\n      console.error('Error filtering items:', error);\n      throw error;\n    }\n  }\n  generateAuthToken() {\n    const timestamp = new Date().toISOString().slice(0, 10).replace(/-/g, '');\n    return md5(`${this.authToken}_${timestamp}`);\n  }\n}\nexport default Api;","map":{"version":3,"names":["axios","md5","Api","constructor","apiUrl","authToken","getIds","offset","limit","response","post","action","params","headers","generateAuthToken","data","result","error","console","getItems","ids","filter","timestamp","Date","toISOString","slice","replace"],"sources":["C:/Users/Игорь/dev/valantis/ValantisTestTask/src/Api.js"],"sourcesContent":["import axios from 'axios';\r\nimport md5 from 'md5';\r\n\r\nclass Api {\r\n  constructor(apiUrl, authToken) {\r\n    this.apiUrl = apiUrl;\r\n    this.authToken = authToken;\r\n  }\r\n\r\n  async getIds(offset = 0, limit = 50) {\r\n    try {\r\n      const response = await axios.post(\r\n        this.apiUrl,\r\n        {\r\n          action: 'get_ids',\r\n          params: { offset, limit }\r\n        },\r\n        { headers: { 'X-Auth': this.generateAuthToken() } }\r\n      );\r\n      return response.data.result;\r\n    } catch (error) {\r\n      console.error('Error fetching IDs:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getItems(ids) {\r\n    try {\r\n      const response = await axios.post(\r\n        this.apiUrl,\r\n        {\r\n          action: 'get_items',\r\n          params: { ids }\r\n        },\r\n        { headers: { 'X-Auth': this.generateAuthToken() } }\r\n      );\r\n      return response.data.result;\r\n    } catch (error) {\r\n      console.error('Error fetching items:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async filter(params) {\r\n    try {\r\n      const response = await axios.post(\r\n        this.apiUrl,\r\n        {\r\n          action: 'filter',\r\n          params\r\n        },\r\n        { headers: { 'X-Auth': this.generateAuthToken() } }\r\n      );\r\n      return response.data.result;\r\n    } catch (error) {\r\n      console.error('Error filtering items:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  generateAuthToken() {\r\n    const timestamp = new Date().toISOString().slice(0, 10).replace(/-/g, '');\r\n    return md5(`${this.authToken}_${timestamp}`);\r\n  }\r\n}\r\n\r\nexport default Api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,KAAK;AAErB,MAAMC,GAAG,CAAC;EACRC,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAE;IAC7B,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAC5B;EAEA,MAAMC,MAAMA,CAACC,MAAM,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAE;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,IAAI,CAACN,MAAM,EACX;QACEO,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;UAAEL,MAAM;UAAEC;QAAM;MAC1B,CAAC,EACD;QAAEK,OAAO,EAAE;UAAE,QAAQ,EAAE,IAAI,CAACC,iBAAiB,CAAC;QAAE;MAAE,CACpD,CAAC;MACD,OAAOL,QAAQ,CAACM,IAAI,CAACC,MAAM;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF;EAEA,MAAME,QAAQA,CAACC,GAAG,EAAE;IAClB,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,IAAI,CAACN,MAAM,EACX;QACEO,MAAM,EAAE,WAAW;QACnBC,MAAM,EAAE;UAAEQ;QAAI;MAChB,CAAC,EACD;QAAEP,OAAO,EAAE;UAAE,QAAQ,EAAE,IAAI,CAACC,iBAAiB,CAAC;QAAE;MAAE,CACpD,CAAC;MACD,OAAOL,QAAQ,CAACM,IAAI,CAACC,MAAM;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;EAEA,MAAMI,MAAMA,CAACT,MAAM,EAAE;IACnB,IAAI;MACF,MAAMH,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,IAAI,CAACN,MAAM,EACX;QACEO,MAAM,EAAE,QAAQ;QAChBC;MACF,CAAC,EACD;QAAEC,OAAO,EAAE;UAAE,QAAQ,EAAE,IAAI,CAACC,iBAAiB,CAAC;QAAE;MAAE,CACpD,CAAC;MACD,OAAOL,QAAQ,CAACM,IAAI,CAACC,MAAM;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF;EAEAH,iBAAiBA,CAAA,EAAG;IAClB,MAAMQ,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IACzE,OAAOzB,GAAG,CAAE,GAAE,IAAI,CAACI,SAAU,IAAGiB,SAAU,EAAC,CAAC;EAC9C;AACF;AAEA,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}